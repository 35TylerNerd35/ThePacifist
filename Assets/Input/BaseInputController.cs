//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input/BaseInputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BaseInputController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BaseInputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BaseInputController"",
    ""maps"": [
        {
            ""name"": ""PlayerInputs"",
            ""id"": ""79fd58dd-a668-4dbf-8269-fe48cbf883b7"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""1caf2b0a-a219-43d2-bc50-be13b53ad907"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b1130c72-065c-4ffc-8f11-708c1a4ec99a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""0c59ac9a-b00e-40e6-b69f-4b702140e5be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""d6674d62-8fec-4ad4-b5eb-dd2087008103"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""0e014e28-5282-44c1-8b6e-62243c8c636c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""6ff029de-e0b4-4ec4-995f-02820a1f772c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ba1762fb-35bb-4c9c-ae22-984b0e058ca6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.005)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""4de8ab68-8498-46bd-8b0e-ed81ef285437"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.005)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e6b0ee9c-1426-4188-8c7d-c8d5901b75d8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a324bca4-aa43-48e3-bdf0-f9c29dcf311d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0037c881-5949-4d16-bfbd-2f2bc72cd66e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""864d81c0-eeb5-408c-b13b-e989c002edf3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""260e5767-60e9-4b74-87f9-f2caf0a89365"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""78b0c7df-2cfb-462a-9aa9-b965723f547e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bba5a5ed-4c16-4bd4-ba4c-ed4bfcc6030e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bbf15957-d909-4622-b9d7-242160153b9f"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""73501a24-d8b2-4890-9771-b819f95d96d5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7c637623-00e7-4c64-836e-a170116b1459"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d74dcfae-fd91-4e56-bd37-e10223dbbebd"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a05c260-c022-4733-983e-b747df5ed7c3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""477ce9aa-7722-470d-b034-31ca46738d1e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc842754-58a1-4f88-a287-257fcf1674ed"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f81691ed-8925-4940-90c0-664dda01b07b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b770e86-9bb0-4649-bf75-aec79a98138f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49cf46a0-96de-4cd4-946f-4ed18ac282e5"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bc655a2-c3d1-438b-a2b2-96e757984b55"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa9e7c10-1eca-4e84-9cf6-962d6e7007fd"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1dd77988-e634-4c34-a6d2-743b9cb1f6b0"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""429c67c2-362c-4f66-a379-565b79977d48"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=75,y=75)"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5189cb32-bd6c-4b36-be4d-113c03cdeb49"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07da666d-6fc3-4d58-9c01-636fe5f56565"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f92e1458-9a89-4f2a-8e37-db4fa59c4d3d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61bd351f-1f7a-4371-bcc0-1110887df9a3"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuInputs"",
            ""id"": ""3d4c1f4f-4944-4592-9b8d-6cd03b893e78"",
            ""actions"": [
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""ef4de33e-45cf-4968-88d2-91485510a85f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.005)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""8a2eebb4-a634-4832-820c-99dd47db2568"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.005)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""feecd284-7d80-49ae-a00b-e56cc0345157"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.005)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Temp"",
                    ""type"": ""Button"",
                    ""id"": ""98f7d636-fa74-457b-9d1b-771abcdb946e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Temp1"",
                    ""type"": ""Button"",
                    ""id"": ""8dd44515-df27-46d7-8dbc-592b1836392f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""978bd8dd-a46f-412d-ba49-bd8f93efcb35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c2be2686-81f9-4c8b-a9ec-43eba06b3f62"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0feaa8a8-96ea-40db-9696-ed77aef85337"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""3e6d947e-4ac8-4588-8ad4-c6979c316da4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""88dfb2de-d372-46f4-b49a-cf54244a5fc7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""64ccd24e-c8fd-49b7-a5e6-fcaef7e01563"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a8dd4314-e511-4fe8-b5c0-e357b97c4b10"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2d5d203d-78ff-4018-8248-f20fdfd35ebf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""f2c8a36e-ef33-4b73-904e-435c299b9a4e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8d609e2f-b935-4165-842b-e79c645769ea"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""819e8b99-5fc3-4374-84b6-28e37aeed688"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""040cb36d-298f-4f36-be14-a0a81696f4c1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fd382409-3462-41d8-a2dd-e733d2cf3ce4"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5b38f7ec-7cfd-4470-876b-2f2923b53a96"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16f83ac0-661a-4e08-8405-1ac31e162242"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6318adba-ab99-4098-90c4-ba592dd7780a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6500ea54-52de-4391-9550-fa741227b084"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eedc8921-7a92-40a1-beb5-28574f72e96e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff5d5136-4c55-4728-b07f-49a19b73342d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Temp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccaee461-dac8-45e6-9163-48989d0ed6a9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Temp1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f825d14e-10c9-4610-827a-e55533a60d1f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ceb29820-7596-436a-923b-41e45fb3236d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ConsoleInputs"",
            ""id"": ""b99fc64d-f270-4d2e-b23c-a4ed21159449"",
            ""actions"": [
                {
                    ""name"": ""SelectAll"",
                    ""type"": ""Button"",
                    ""id"": ""043c27eb-d149-4b4c-93a5-7469f9faf142"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""9b16e573-1236-4018-bcdf-807d51bfb842"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.001)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Backspace"",
                    ""type"": ""Button"",
                    ""id"": ""01c2be86-4718-499a-a57d-5eb8c82b5480"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.001)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CaretMovement"",
                    ""type"": ""Value"",
                    ""id"": ""11a3f171-e6eb-45e8-a90e-2536a0170373"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": ""Tap(duration=0.001)"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Unselect"",
                    ""type"": ""Button"",
                    ""id"": ""e468daa1-699d-4d85-88a9-5dca61c4a169"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""510334bb-c2df-4ad8-bd19-ce8603235e78"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectAll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""54a9b3c1-2232-4df0-b8b7-8aaa6d95db36"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectAll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""163acd51-f33c-4b17-9fca-021af9909559"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectAll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2656e695-8e8a-44ad-be41-583e21116019"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a63f53f-9fde-4c3b-bb8f-7a9efc0b39ee"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2614f908-3985-473a-b82d-7289fd9dd400"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backspace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ee75aa0-b6c8-458c-823e-b915733949ce"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Backspace"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""8d3b1a30-392c-4bf4-b8b7-03dce7ac3ef1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CaretMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a9b6e474-fc9a-4230-ab57-c2f6a28cbc19"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CaretMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""29abc358-eeef-4b53-ab30-4722ff1acc6a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CaretMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""6b5042b5-a144-4b91-befe-49fc45edec81"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CaretMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""25c3f7a1-c34a-462c-8a23-2fe43f7b5179"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CaretMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6336bc47-7b81-4346-827c-c9462617ee92"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CaretMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb442982-6837-4ac7-a19a-c41a08004f7b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unselect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerInputs
        m_PlayerInputs = asset.FindActionMap("PlayerInputs", throwIfNotFound: true);
        m_PlayerInputs_Look = m_PlayerInputs.FindAction("Look", throwIfNotFound: true);
        m_PlayerInputs_Move = m_PlayerInputs.FindAction("Move", throwIfNotFound: true);
        m_PlayerInputs_Run = m_PlayerInputs.FindAction("Run", throwIfNotFound: true);
        m_PlayerInputs_Crouch = m_PlayerInputs.FindAction("Crouch", throwIfNotFound: true);
        m_PlayerInputs_Jump = m_PlayerInputs.FindAction("Jump", throwIfNotFound: true);
        m_PlayerInputs_Attack = m_PlayerInputs.FindAction("Attack", throwIfNotFound: true);
        m_PlayerInputs_Interact = m_PlayerInputs.FindAction("Interact", throwIfNotFound: true);
        m_PlayerInputs_Dash = m_PlayerInputs.FindAction("Dash", throwIfNotFound: true);
        // MenuInputs
        m_MenuInputs = asset.FindActionMap("MenuInputs", throwIfNotFound: true);
        m_MenuInputs_Close = m_MenuInputs.FindAction("Close", throwIfNotFound: true);
        m_MenuInputs_Move = m_MenuInputs.FindAction("Move", throwIfNotFound: true);
        m_MenuInputs_Select = m_MenuInputs.FindAction("Select", throwIfNotFound: true);
        m_MenuInputs_Temp = m_MenuInputs.FindAction("Temp", throwIfNotFound: true);
        m_MenuInputs_Temp1 = m_MenuInputs.FindAction("Temp1", throwIfNotFound: true);
        m_MenuInputs_Menu = m_MenuInputs.FindAction("Menu", throwIfNotFound: true);
        // ConsoleInputs
        m_ConsoleInputs = asset.FindActionMap("ConsoleInputs", throwIfNotFound: true);
        m_ConsoleInputs_SelectAll = m_ConsoleInputs.FindAction("SelectAll", throwIfNotFound: true);
        m_ConsoleInputs_Submit = m_ConsoleInputs.FindAction("Submit", throwIfNotFound: true);
        m_ConsoleInputs_Backspace = m_ConsoleInputs.FindAction("Backspace", throwIfNotFound: true);
        m_ConsoleInputs_CaretMovement = m_ConsoleInputs.FindAction("CaretMovement", throwIfNotFound: true);
        m_ConsoleInputs_Unselect = m_ConsoleInputs.FindAction("Unselect", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInputs
    private readonly InputActionMap m_PlayerInputs;
    private List<IPlayerInputsActions> m_PlayerInputsActionsCallbackInterfaces = new List<IPlayerInputsActions>();
    private readonly InputAction m_PlayerInputs_Look;
    private readonly InputAction m_PlayerInputs_Move;
    private readonly InputAction m_PlayerInputs_Run;
    private readonly InputAction m_PlayerInputs_Crouch;
    private readonly InputAction m_PlayerInputs_Jump;
    private readonly InputAction m_PlayerInputs_Attack;
    private readonly InputAction m_PlayerInputs_Interact;
    private readonly InputAction m_PlayerInputs_Dash;
    public struct PlayerInputsActions
    {
        private @BaseInputController m_Wrapper;
        public PlayerInputsActions(@BaseInputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_PlayerInputs_Look;
        public InputAction @Move => m_Wrapper.m_PlayerInputs_Move;
        public InputAction @Run => m_Wrapper.m_PlayerInputs_Run;
        public InputAction @Crouch => m_Wrapper.m_PlayerInputs_Crouch;
        public InputAction @Jump => m_Wrapper.m_PlayerInputs_Jump;
        public InputAction @Attack => m_Wrapper.m_PlayerInputs_Attack;
        public InputAction @Interact => m_Wrapper.m_PlayerInputs_Interact;
        public InputAction @Dash => m_Wrapper.m_PlayerInputs_Dash;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Add(instance);
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
        }

        private void UnregisterCallbacks(IPlayerInputsActions instance)
        {
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
        }

        public void RemoveCallbacks(IPlayerInputsActions instance)
        {
            if (m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerInputsActions @PlayerInputs => new PlayerInputsActions(this);

    // MenuInputs
    private readonly InputActionMap m_MenuInputs;
    private List<IMenuInputsActions> m_MenuInputsActionsCallbackInterfaces = new List<IMenuInputsActions>();
    private readonly InputAction m_MenuInputs_Close;
    private readonly InputAction m_MenuInputs_Move;
    private readonly InputAction m_MenuInputs_Select;
    private readonly InputAction m_MenuInputs_Temp;
    private readonly InputAction m_MenuInputs_Temp1;
    private readonly InputAction m_MenuInputs_Menu;
    public struct MenuInputsActions
    {
        private @BaseInputController m_Wrapper;
        public MenuInputsActions(@BaseInputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Close => m_Wrapper.m_MenuInputs_Close;
        public InputAction @Move => m_Wrapper.m_MenuInputs_Move;
        public InputAction @Select => m_Wrapper.m_MenuInputs_Select;
        public InputAction @Temp => m_Wrapper.m_MenuInputs_Temp;
        public InputAction @Temp1 => m_Wrapper.m_MenuInputs_Temp1;
        public InputAction @Menu => m_Wrapper.m_MenuInputs_Menu;
        public InputActionMap Get() { return m_Wrapper.m_MenuInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuInputsActions set) { return set.Get(); }
        public void AddCallbacks(IMenuInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuInputsActionsCallbackInterfaces.Add(instance);
            @Close.started += instance.OnClose;
            @Close.performed += instance.OnClose;
            @Close.canceled += instance.OnClose;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Temp.started += instance.OnTemp;
            @Temp.performed += instance.OnTemp;
            @Temp.canceled += instance.OnTemp;
            @Temp1.started += instance.OnTemp1;
            @Temp1.performed += instance.OnTemp1;
            @Temp1.canceled += instance.OnTemp1;
            @Menu.started += instance.OnMenu;
            @Menu.performed += instance.OnMenu;
            @Menu.canceled += instance.OnMenu;
        }

        private void UnregisterCallbacks(IMenuInputsActions instance)
        {
            @Close.started -= instance.OnClose;
            @Close.performed -= instance.OnClose;
            @Close.canceled -= instance.OnClose;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Temp.started -= instance.OnTemp;
            @Temp.performed -= instance.OnTemp;
            @Temp.canceled -= instance.OnTemp;
            @Temp1.started -= instance.OnTemp1;
            @Temp1.performed -= instance.OnTemp1;
            @Temp1.canceled -= instance.OnTemp1;
            @Menu.started -= instance.OnMenu;
            @Menu.performed -= instance.OnMenu;
            @Menu.canceled -= instance.OnMenu;
        }

        public void RemoveCallbacks(IMenuInputsActions instance)
        {
            if (m_Wrapper.m_MenuInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuInputsActions @MenuInputs => new MenuInputsActions(this);

    // ConsoleInputs
    private readonly InputActionMap m_ConsoleInputs;
    private List<IConsoleInputsActions> m_ConsoleInputsActionsCallbackInterfaces = new List<IConsoleInputsActions>();
    private readonly InputAction m_ConsoleInputs_SelectAll;
    private readonly InputAction m_ConsoleInputs_Submit;
    private readonly InputAction m_ConsoleInputs_Backspace;
    private readonly InputAction m_ConsoleInputs_CaretMovement;
    private readonly InputAction m_ConsoleInputs_Unselect;
    public struct ConsoleInputsActions
    {
        private @BaseInputController m_Wrapper;
        public ConsoleInputsActions(@BaseInputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectAll => m_Wrapper.m_ConsoleInputs_SelectAll;
        public InputAction @Submit => m_Wrapper.m_ConsoleInputs_Submit;
        public InputAction @Backspace => m_Wrapper.m_ConsoleInputs_Backspace;
        public InputAction @CaretMovement => m_Wrapper.m_ConsoleInputs_CaretMovement;
        public InputAction @Unselect => m_Wrapper.m_ConsoleInputs_Unselect;
        public InputActionMap Get() { return m_Wrapper.m_ConsoleInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ConsoleInputsActions set) { return set.Get(); }
        public void AddCallbacks(IConsoleInputsActions instance)
        {
            if (instance == null || m_Wrapper.m_ConsoleInputsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ConsoleInputsActionsCallbackInterfaces.Add(instance);
            @SelectAll.started += instance.OnSelectAll;
            @SelectAll.performed += instance.OnSelectAll;
            @SelectAll.canceled += instance.OnSelectAll;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Backspace.started += instance.OnBackspace;
            @Backspace.performed += instance.OnBackspace;
            @Backspace.canceled += instance.OnBackspace;
            @CaretMovement.started += instance.OnCaretMovement;
            @CaretMovement.performed += instance.OnCaretMovement;
            @CaretMovement.canceled += instance.OnCaretMovement;
            @Unselect.started += instance.OnUnselect;
            @Unselect.performed += instance.OnUnselect;
            @Unselect.canceled += instance.OnUnselect;
        }

        private void UnregisterCallbacks(IConsoleInputsActions instance)
        {
            @SelectAll.started -= instance.OnSelectAll;
            @SelectAll.performed -= instance.OnSelectAll;
            @SelectAll.canceled -= instance.OnSelectAll;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Backspace.started -= instance.OnBackspace;
            @Backspace.performed -= instance.OnBackspace;
            @Backspace.canceled -= instance.OnBackspace;
            @CaretMovement.started -= instance.OnCaretMovement;
            @CaretMovement.performed -= instance.OnCaretMovement;
            @CaretMovement.canceled -= instance.OnCaretMovement;
            @Unselect.started -= instance.OnUnselect;
            @Unselect.performed -= instance.OnUnselect;
            @Unselect.canceled -= instance.OnUnselect;
        }

        public void RemoveCallbacks(IConsoleInputsActions instance)
        {
            if (m_Wrapper.m_ConsoleInputsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IConsoleInputsActions instance)
        {
            foreach (var item in m_Wrapper.m_ConsoleInputsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ConsoleInputsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ConsoleInputsActions @ConsoleInputs => new ConsoleInputsActions(this);
    public interface IPlayerInputsActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
    public interface IMenuInputsActions
    {
        void OnClose(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnTemp(InputAction.CallbackContext context);
        void OnTemp1(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
    public interface IConsoleInputsActions
    {
        void OnSelectAll(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnBackspace(InputAction.CallbackContext context);
        void OnCaretMovement(InputAction.CallbackContext context);
        void OnUnselect(InputAction.CallbackContext context);
    }
}
